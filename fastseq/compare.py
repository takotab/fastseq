# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/12_compare.ipynb (unless otherwise specified).

__all__ = ['compare']

# Cell
from fastcore.utils import *
from fastcore.imports import *
from fastai.basics import *
from .data.all import *
from .nbeats.learner import *


# Cell
import seaborn as sns
def _compare(learn, lr, epochs):
    learn.fit(epochs, lr)
    return {k:v for k,v in zip(L('loss',*[o.name for o in learn.metrics]),learn.validate())}

def compare(learner,kwargs1, kwargs2, lr=5e-1, epochs= [5, 5,5,5], iterations=5):
    epochs =L(epochs)
    res = []
    for _ in range(iterations):
        learn = learner(**kwargs1)
        for i, epoch in enumerate(epochs):
            _res = _compare(learn, lr, epoch)
            _res['learner']='base'
            _res['epochs'] = sum(epochs[:i])
            res.append(_res)

    diff = {k : kwargs2[k] for k in set(kwargs2)- set(kwargs1)}
    print(diff)
    for _ in range(iterations):
        learn = learner(**kwargs2)
        for i, epoch in enumerate(epochs):
            _res = _compare(learn, lr, epoch)
            _res['learner']= str(diff)
            _res['epochs'] = sum(epochs[:i])
            res.append(_res)
        res.append(_res)
    df =pd.DataFrame(res)
    sns.catplot(data=df, x='learner',y='loss', hue='epochs')
    return res
