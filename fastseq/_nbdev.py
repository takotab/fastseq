# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"Path.copy": "00_core.ipynb",
         "Path.delete": "00_core.ipynb",
         "git_add": "00_core.ipynb",
         "first_item": "00_core.ipynb",
         "unpack_list": "00_core.ipynb",
         "reverse_lst": "00_core.ipynb",
         "concat_dct": "00_core.ipynb",
         "multithread_f": "00_core.ipynb",
         "pad_zeros": "00_core.ipynb",
         "Skip": "00_core.ipynb",
         "get_ts_files": "00_core.ipynb",
         "IndexsSplitter": "00_core.ipynb",
         "TSeries": "00_core.ipynb",
         "no_emp_dim": "00_core.ipynb",
         "TensorSeq": "00_core.ipynb",
         "TensorCon": "00_core.ipynb",
         "TensorCat": "00_core.ipynb",
         "count_nested_lists": "00_core.ipynb",
         "CatSeq": "00_core.ipynb",
         "MultiTuple": "00_core.ipynb",
         "get_ax": "00_core.ipynb",
         "show_mt": "00_core.ipynb",
         "MultiTuple.show": "00_core.ipynb",
         "ts_lists": "01_data.external.ipynb",
         "add_days": "00_m5.ipynb",
         "interpolate_w_starting_nan": "00_m5.ipynb",
         "get_prices": "00_m5.ipynb",
         "csv_gen": "00_m5.ipynb",
         "to_contained_series": "00_m5.ipynb",
         "m4_base": "01_data.external.ipynb",
         "URLs.m4_daily": "01_data.external.ipynb",
         "get_m4_files": "01_data.external.ipynb",
         "dummy_data_generator": "01_data.external.ipynb",
         "dummy_generator_multi_easy": "01_data.external.ipynb",
         "dummy_data_generator_multi": "01_data.external.ipynb",
         "TSMulti": "01_data.external.ipynb",
         "get_df": "01_data.external.ipynb",
         "add_dct": "01_data.external.ipynb",
         "make_meta_file": "01_data.external.ipynb",
         "Meta": "01_data.external.ipynb",
         "TS": "01_data.external.ipynb",
         "get_ts_datapoint": "01_data.external.ipynb",
         "get_meta": "01_data.external.ipynb",
         "python_type": "01_data.external.ipynb",
         "reconize_cols": "01_data.external.ipynb",
         "make_compact": "01_data.external.ipynb",
         "save_row": "01_data.external.ipynb",
         "save_df": "01_data.external.ipynb",
         "del_create": "01_data.external.ipynb",
         "meta_from_path": "01_data.external.ipynb",
         "Meta.get_classes": "01_data.external.ipynb",
         "Meta.del_col": "01_data.external.ipynb",
         "TensorCatI": "02_data.load.ipynb",
         "CatSeqI": "02_data.load.ipynb",
         "CatTfm": "02_data.load.ipynb",
         "TSMulti_": "02_data.load.ipynb",
         "get_classes": "02_data.load.ipynb",
         "make_vocab": "02_data.load.ipynb",
         "make_ids": "02_data.load.ipynb",
         "split_ts_con": "02_data.load.ipynb",
         "json2TSMulti": "02_data.load.ipynb",
         "catagories": "02_data.load.ipynb",
         "CatMultiTfm": "02_data.load.ipynb",
         "MTSDataLoader": "02_data.load.ipynb",
         "MTSDataLoader.show_batch": "02_data.load.ipynb",
         "NormalizeSeq": "03_data.core.ipynb",
         "NormalizeSeqMulti": "03_data.core.ipynb",
         "make_test": "03_data.core.ipynb",
         "split_file": "03_data.core.ipynb",
         "TSSplitter": "03_data.core.ipynb",
         "get_train_valid_ts": "03_data.core.ipynb",
         "split_for_m5": "03_data.core.ipynb",
         "MTSDataLoaders": "03_data.core.ipynb",
         "from_m5_path": "03_data.core.ipynb",
         "MTSDataLoaders.from_m5_path": "03_data.core.ipynb",
         "from_path": "03_data.core.ipynb",
         "MTSDataLoaders.from_path": "03_data.core.ipynb",
         "from_folders": "03_data.core.ipynb",
         "MTSDataLoaders.from_folders": "03_data.core.ipynb",
         "CatProc": "04_data.procs.ipynb",
         "DateProc": "04_data.procs.ipynb",
         "SeqTab": "10_model.base.ipynb",
         "M5Learner": "11_model.conv.ipynb",
         "SeqTabLearner": "11_model.conv.ipynb",
         "make_pred": "10_model.base.ipynb",
         "make_submision_file": "10_model.base.ipynb",
         "make_file": "10_model.base.ipynb",
         "M5Learner.make_submision_file": "10_model.base.ipynb",
         "mape": "11_metrics.ipynb",
         "smape": "11_metrics.ipynb",
         "SMAPELossFlat": "11_metrics.ipynb",
         "mase": "11_metrics.ipynb",
         "NBeatsLossPart": "11_metrics.ipynb",
         "NBeatsBackward": "11_metrics.ipynb",
         "NBeatsForward": "11_metrics.ipynb",
         "LossPart": "11_metrics.ipynb",
         "ForcastLoss": "11_metrics.ipynb",

modules = ["core.py",
           "m5.py",
           "data/external.py",
           "data/load.py",
           "data/core.py",
           "data/procs.py",
           "model/base.py",
           "metrics.py",
           "model/conv.py",
           "compare.py",
           "tab/model.py"]

doc_url = "https://takotab.github.io/fastseq/"

git_url = "https://github.com/takotab/fastseq/tree/master/"

def custom_doc_links(name): return None
